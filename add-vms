#!/bin/bash -ex

NUM_VMS=$1
MAAS_URL=$2
MAAS_OAUTH=$3
PHYS_HOST=$(hostname)
BRIDGE="juju-br0"

if [ "$(id -u)" != "0" ]; then
  echo "Must be run with sudo or by root"
  exit 77
fi

echo "Removing old disk pools (if present)"
virsh pool-destroy vm-swarm || true
virsh pool-delete vm-swarm || true
virsh net-info default && virsh net-destroy default && virsh net-undefine default

[ -d /var/lib/vm-swarm ] || sudo install -d /var/lib/vm-swarm --owner ubuntu --group ubuntu

apt-get install -y maas-cli virtinst kvm
maas list | grep '^admin ' && maas logout admin
maas login admin "$MAAS_URL" "$MAAS_OAUTH"
maas admin tags new name=virtual 2>/dev/null || true
maas admin tags new name=bootstrap 2>/dev/null || true
maas admin tags new name=neutron 2>/dev/null || true

for i in $(seq 1 "$NUM_VMS" | sort -r); do
        hostname="${PHYS_HOST}vm${i}.maas"
        virsh destroy "$hostname" 2>/dev/null || true
        virsh undefine "$hostname" 2>/dev/null || true
        rm -f "/var/lib/${hostname}-1.img" "/var/lib/${hostname}-2.img"
        echo "INFO: Installing virtual machine: $hostname"
        virt-install --debug \
            --virt-type=kvm \
            --name "$hostname" \
            --ram 4096 \
            --disk=path="/var/lib/${hostname}-1.img,size=40" \
            --disk=path="/var/lib/${hostname}-2.img,size=2" \
            --vcpus=2 --os-type=linux --pxe \
            --network=bridge=${BRIDGE},model=virtio \
            --network=bridge=${BRIDGE},model=rtl8139 \
            --boot network \
            --video=cirrus \
            --graphics vnc
done

for i in $(seq 0 1 | sort -r); do
        hostname="${PHYS_HOST}vm${i}.maas"
        # Wait for the domain to be shutoff, as a safeguard
        while virsh domstate "$hostname" | grep 'running' > /dev/null 2>&1; do
            sleep 5
            echo "Waiting for Domain to be not 'running'"
        done

        #Workaround for bug: https://bugs.launchpad.net/maas/+bug/1367482
        virsh dumpxml "$hostname" > "/tmp/${hostname}.xml"
        sed -i -e \
            "s#<model type='rtl8139'/>#<model type='rtl8139'/> <rom file=''/>#" \
            "/tmp/${hostname}.xml"
        virsh define "/tmp/${hostname}.xml"
        virsh autostart "$hostname"
        mac=$(virsh dumpxml "$hostname" | python -c 'import sys, lxml.etree; print list(lxml.etree.parse(sys.stdin).iter("mac"))[0].get("address")')
        system_id=$(maas admin nodes list "mac_address=$mac" | grep system_id | cut -d'"' -f4)
        maas admin node update \
            "$system_id" \
            "hostname=$hostname" \
            power_type=virsh \
            "power_parameters_power_address=qemu+ssh://ubuntu@${PHYS_HOST}.maas/system" \
            "power_parameters_power_id=$hostname"
        maas admin tag update-nodes "virtual" "add=$system_id"
        maas admin node commission "$system_id" || true
done

